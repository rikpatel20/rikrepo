
mkdir repo
cd repo/
git init
Set Global config
git config --global user.name "Rik Patel"
git config --global user.email "rpatel3@twutil.net"

# To configure you laptop or personal VM without git prompting user/password.
#Create .netrc file in your home dir with below content

[thames@VMName ~]$ pwd
/home/user
[thames@VMName ~]$ cat .netrc
machine project.visualstudio.com
       login rpatel3@hello.net
       password Passw0rd!


Remove Global COnfig
git config --global --unset user.email
git config --global --unset user.name

git remote add origin https://PROJECT.visualstudio.com/Project%20Cloud%20-%20Azure/_git/Cloud%20Automation%20Scripts

git remote -v

git pull origin master
or
git pull https://PROJECT.visualstudio.com/Project%20Cloud%20-%20Azure/_git/Cloud%20Automation%20Scripts

git clone https://github.aws.uk.website.com/opspe/control-repo
or
git clone https://github.com/rikunjpatel/rikrepo.git
DO the required changes then run below:

git add .
git show
git commit -a  (This will open VIM to add comments save it with ESC : wq like in vi )
git commit -m"first commit"
git status
git push origin master

https://confluence.atlassian.com/bitbucketserver/basic-git-commands-776639767.html
google simple git commands

====================More Advance commands================
#####  Branching   ####
 # To show local and remote branches
 git branch -a
 git branch -r #(only remote branches) to see all the remotes and their branches. 
 
 # To pull remote branch and create a local branch.
 git checkout -t remotes/repo/branch
 
# To delete a local branch
git branch -d the_local_branch

# Create a new Branch and switch to it
  git checkout -b newbranchname
# Will tell you which branch currently you are on
  git branch
# Will switch to master branch
  git checkout master 
  git checkout newbranchname

# Once you checkout a branch anything you do in that folder will be done in that Checked branch.

 If the branch already exist it will still create local branch, but will not be able to Push any updates.
 First pull the remove branch with "git pull origin vm"
 This will download and pair the local branch with remote. 
 Only then you will be allowed to Push any new changes to the repo for that branch.
 
 
 
 
 
 
  Id CommandLine
  -- -----------
   1 cd
   2 cd ./clouddrive/TWGitRepo/
   3 git branch
   4 git checkout vm
   5 git checkout -b vm
   6 git branch
   7 ls
   8 cd vm
   9 cd ./Run_Runbooks/
  10 ls
  11 git add --all
  12  git commit -a -m 'added a VM Runbook on VM Branch'
  13  git push --set-upstream origin vm # (Local Branch Name that needs to be pushed /created on the repo)
  14 git pull origin vm   #<<< need to run first to merge the remote branch with local branch
  15  git push --set-upstream origin vm
  
  
#Do the changes required to do in newbranchname run git add , git commit and git push to dev branch
  git add --all
  git commit -a -m 'added a new HISTORYon Dev Branch'
  git push --set-upstream origin newbranchname
  git status
  
Now if all looks good with the changes made on newbranchname, merge it to the master
First checkout to master
  git checkout master 
  git branch
  git status
  git show
  
  git merge dev
  git status
  git show
Push it from local to master branch, confirm with git show & status
  git push origin master

Now if you did some change on the master branch directly, when you go back to Dev it's not visible
so simply first switch to the Dev branch and pull the updates from master branch
git pull origin master



git branch

cd control-repo/
git branch
git flow init
	configure the master(provisioning) develop(development) rest all should have "_" rather then "/" for eg; hotfix/ should be hotfix_


git flow hotfix start 0_1_13
bumpversion patch
git branch
cd hieradata/locations/aws/eu-west-1/core/
vi provisioning.yaml
git add provisioning.yaml
git commit -m"CP-287 #comment added new environment"
git push origin -u hotfix_0_1_13

Test the 
git tag 0_1_13
git push --tags


